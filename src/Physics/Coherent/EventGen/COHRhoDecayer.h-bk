#ifndef COHRHO_DECAYER_H_
#define COHRHO_DECAYER_H_
 
#include <TGenPhaseSpace.h>
#include <TLorentzVector.h>
 
#include "Decay/DecayModelI.h"
 
namespace genie {
 
class COHRhoDecayer : public DecayModelI {
 
public:
  COHRhoDecayer();
  COHRhoDecayer(string config);
  virtual ~COHRhoDecayer();

   // implement the DecayModelI interface
  bool           IsHandled      (int pdgc)                      const;
  void           Initialize     (void)                          const;
  TClonesArray * Decay          (const DecayerInputs_t & inp)   const;
  double         Weight         (void)                          const;
  void           InhibitDecay   (int pdg, TDecayChannel * dc=0) const;
  void           UnInhibitDecay (int pdg, TDecayChannel * dc=0) const;
 
  // overload the Algorithm::Configure() methods to load private data
  // members from configuration options
  void Configure(const Registry & config);
  void Configure(string config);

private:

  void           LoadConfig     (void);
  TClonesArray * DecayExclusive (int pdgc, TLorentzVector & p, TDecayChannel * ch) const;
  double         FinalStateMass (TDecayChannel * channel) const;

  mutable TGenPhaseSpace fPhaseSpaceGenerator;
  mutable double         fWeight;
 
  bool fGenerateWeighted;
};
 
}         // genie namespace
 
#endif    // COHRHO_DECAYER_H_
